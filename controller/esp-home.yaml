esphome:
  name: demo-shelf-action-controller
  friendly_name: demo-shelf-action-controller

esp8266:
  board: d1_mini

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "YnolpopF0Y/WQdmoStrwtJsxu9QPPdKURhZm9bBd0LM="

ota:
  - platform: esphome
    password: "bb6a3601de488830179bd68735763436"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  manual_ip:
    static_ip: 10.10.20.53
    gateway: 10.10.0.1
    subnet: 255.255.0.0

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Demo-Shelf-Action-Controller"
    password: "T64yoslT5zA3"

captive_portal:

web_server:
  port: 80

switch:
  - platform: gpio
    name: "Relay 9V line"
    pin: D1
    id: relay1
    inverted: true
  - platform: gpio
    name: "Relay 5V Switched Line"
    pin: D2
    id: relay2
    inverted: true
  - platform: gpio
    name: "Relay 5V action line"
    pin: D5
    id: relay3
    inverted: true
  - platform: gpio
    name: "Relay 4"
    pin: D6
    id: relay4
    inverted: true
    
  - platform: template
    name: "Music Play"
    id: music_play
    assumed_state: false
    on_press:
      - switch.turn_on: music_trigger_gpio
      - delay: 200ms
      - switch.turn_off: music_trigger_gpio

  - platform: template
    name: "Music Stop"
    id: music_stop
    assumed_state: false
    on_press:
      - switch.turn_on: music_trigger_gpio
      - delay: 100ms
      - switch.turn_off: music_trigger_gpio
      - delay: 100ms
      - switch.turn_on: music_trigger_gpio
      - delay: 100ms
      - switch.turn_off: music_trigger_gpio

  - platform: gpio
    id: music_trigger_gpio
    pin: D8
    restore_mode: ALWAYS_OFF
    inverted: false
    internal: true

binary_sensor:
  - platform: gpio
    pin:
      number: D7
      mode: INPUT_PULLUP
      inverted: true
    name: "Action Button"
    id: action_button
    on_press:
      - logger.log: "Action button pressed!"

text_sensor:
  - platform: template
    name: "Button State"
    lambda: |-
      if (id(action_button).state) {
        return {"PRESSED"};
      } else {
        return {"RELEASED"};
      }
    update_interval: 0.5s

